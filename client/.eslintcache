[{"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/index.js":"1","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/App.js":"2","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/context/auth.js":"3","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/utils/SpotifySearch.js":"4","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignUp.js":"5","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignIn.js":"6","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/Forbidden.js":"7","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdateCourse.js":"8","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignOut.js":"9","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/NotFound.js":"10","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UnhandledError.js":"11","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdatePlaylists.js":"12","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/AlbumDetail.js":"13","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/PlaylistDetail.js":"14","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/Playlists.js":"15","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/layout/Header.js":"16","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/layout/ActionBar.js":"17","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/CreatePlaylist.js":"18","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/IndexScreen/AlbumListGrid.js":"19","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistDetailsScreen/PlaylistHeader.js":"20","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumDetailsScreen/AlbumHeader.js":"21","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumStager/StagedAlbums.js":"22","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumStager/AlbumStager.js":"23","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/ArtistSearch/ArtistSearch.js":"24","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumStager/AlbumSearchResults.js":"25","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/ArtistSearch/ArtistSearchResults.js":"26","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumTracksPopover/AlbumTrackPopover.js":"27","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumTracksPopover/PopoverData.js":"28","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumDetailsScreen/AlbumPlaylists.js":"29","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistDetailsScreen/PlaylistAlbums.js":"30","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/utils/PrivateRoute.js":"31","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/utils/Album.js":"32","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/utils/ImageCollage.js":"33","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/utils/Playlist.js":"34","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistAlbumsPopover/PlaylistAlbumsPopover.js":"35","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistAlbumsPopover/AlbumPopoverData.js":"36","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistAlbumsPopover/PopoverAlbums.js":"37","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumSearch/AlbumSearch.js":"38"},{"size":294,"mtime":1610320850285,"results":"39","hashOfConfig":"40"},{"size":1571,"mtime":1610485419988,"results":"41","hashOfConfig":"40"},{"size":2678,"mtime":1610395242441,"results":"42","hashOfConfig":"40"},{"size":1179,"mtime":1609979267630,"results":"43","hashOfConfig":"40"},{"size":2868,"mtime":1610004422577,"results":"44","hashOfConfig":"40"},{"size":2296,"mtime":1608838120888,"results":"45","hashOfConfig":"40"},{"size":275,"mtime":1608751493870,"results":"46","hashOfConfig":"40"},{"size":5374,"mtime":1608756478306,"results":"47","hashOfConfig":"40"},{"size":425,"mtime":1608752397402,"results":"48","hashOfConfig":"40"},{"size":270,"mtime":1608687600207,"results":"49","hashOfConfig":"40"},{"size":445,"mtime":1608687259250,"results":"50","hashOfConfig":"40"},{"size":7095,"mtime":1610483346407,"results":"51","hashOfConfig":"40"},{"size":1278,"mtime":1610483215625,"results":"52","hashOfConfig":"40"},{"size":1469,"mtime":1610483909533,"results":"53","hashOfConfig":"40"},{"size":954,"mtime":1610482609872,"results":"54","hashOfConfig":"40"},{"size":1066,"mtime":1610482885090,"results":"55","hashOfConfig":"40"},{"size":1819,"mtime":1610317724908,"results":"56","hashOfConfig":"40"},{"size":5427,"mtime":1610489968039,"results":"57","hashOfConfig":"40"},{"size":1302,"mtime":1610484952113,"results":"58","hashOfConfig":"40"},{"size":719,"mtime":1610483858609,"results":"59","hashOfConfig":"40"},{"size":2142,"mtime":1610482626957,"results":"60","hashOfConfig":"40"},{"size":1070,"mtime":1610487077500,"results":"61","hashOfConfig":"40"},{"size":641,"mtime":1610482724380,"results":"62","hashOfConfig":"40"},{"size":2062,"mtime":1610486890614,"results":"63","hashOfConfig":"40"},{"size":1261,"mtime":1610489567583,"results":"64","hashOfConfig":"40"},{"size":1878,"mtime":1610482615942,"results":"65","hashOfConfig":"40"},{"size":1511,"mtime":1610484140889,"results":"66","hashOfConfig":"40"},{"size":685,"mtime":1610482144837,"results":"67","hashOfConfig":"40"},{"size":614,"mtime":1610483940347,"results":"68","hashOfConfig":"40"},{"size":530,"mtime":1610483032907,"results":"69","hashOfConfig":"40"},{"size":835,"mtime":1610482872880,"results":"70","hashOfConfig":"40"},{"size":750,"mtime":1610483074022,"results":"71","hashOfConfig":"40"},{"size":860,"mtime":1610482422615,"results":"72","hashOfConfig":"40"},{"size":590,"mtime":1610483974412,"results":"73","hashOfConfig":"40"},{"size":732,"mtime":1610484122407,"results":"74","hashOfConfig":"40"},{"size":406,"mtime":1610484175597,"results":"75","hashOfConfig":"40"},{"size":521,"mtime":1610482194090,"results":"76","hashOfConfig":"40"},{"size":2364,"mtime":1610489693368,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"7w3sv0",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/index.js",[],["162","163"],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/App.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/context/auth.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/utils/SpotifySearch.js",["164","165","166"],"import React, { Fragment, useContext, useState } from 'react';\r\nimport { AuthContext } from '../context/auth';\r\nimport axios from 'axios';\r\n\r\nconst SpotifySearch = () => {\r\n\tconst { authUser, userPassword, spotifyToken } = useContext(AuthContext);\r\n\r\n\tconst [ query, setQuery ] = useState('');\r\n\r\n\tconst searchHandler = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconsole.log(query);\r\n\r\n\t\t// create the config object for authorization\r\n\t\ttry {\r\n\t\t\tconst bearerToken = 'Bearer ' + spotifyToken;\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: bearerToken\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tconsole.log(query, config);\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`https://api.spotify.com/v1/search?q=${query}&type=album`,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\t\t\tconsole.log('search results', data);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error searching for albums');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='search spotify for albums...'\r\n\t\t\t\tvalue={query}\r\n\t\t\t\tonChange={e => setQuery(e.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button className='button button-secondary' onClick={searchHandler}>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default SpotifySearch;\r\n",["167","168"],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignUp.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignIn.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/Forbidden.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdateCourse.js",[],["169","170"],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignOut.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/NotFound.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UnhandledError.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdatePlaylists.js",["171","172"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { AuthContext } from '../context/auth';\r\nimport axios from 'axios';\r\n\r\nimport ActionBar from '../components/layout/ActionBar';\r\nimport styles from './CreatePlaylist.module.css';\r\nimport ArtistSearch from '../components/ArtistSearch/ArtistSearch';\r\nimport AlbumStager from '../components/AlbumStager/AlbumStager';\r\n\r\nconst UpdatePlaylists = ({ history, match }) => {\r\n\tconst id = match.params.id;\r\n\r\n\tconst { authUser, userPassword, spotifyToken } = useContext(AuthContext);\r\n\r\n\tconst [ playlist, setPlaylist ] = useState({});\r\n\r\n\tconst [ albumSearchResults, setAlbumSearchResults ] = useState([]);\r\n\tconst [ stagedAlbums, setStagedAlbums ] = useState([]);\r\n\tconst [ errors, setErrors ] = useState([]);\r\n\r\n\tconst titleInput = useRef('');\r\n\r\n\tconst addPlaylistAlbumsToStage = async data => {\r\n\t\tsetStagedAlbums([]);\r\n\t\tsetPlaylist(data);\r\n\t\tconst albums = data.Albums;\r\n\r\n\t\tfor (let album of albums) {\r\n\t\t\tconsole.log(album.id);\r\n\t\t\tawait addToStage(album.id);\r\n\t\t}\r\n\t};\r\n\r\n\tconst addToStage = async id => {\r\n\t\tconsole.log('addToStage 1');\r\n\t\ttry {\r\n\t\t\tconst bearerToken = 'Bearer ' + spotifyToken;\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: bearerToken\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst { data } = await axios.get(`https://api.spotify.com/v1/albums/${id}`, config);\r\n\r\n\t\t\tconsole.log('adding to staged albums');\r\n\t\t\tsetStagedAlbums(prevState => [ ...prevState, data ]);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// get course detail from api\r\n\t\t\t\t\tconsole.log(id);\r\n\t\t\t\t\tconst { data } = await axios.get(`http://localhost:5000/api/playlists/${id}`);\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t// if the logged in user does not match the course fetched\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\tif (authUser && data.User.id !== authUser.id) {\r\n\t\t\t\t\t\t\thistory.push('/forbidden');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// if there is a course and it matches logged user set data in state\r\n\r\n\t\t\t\t\t\t\taddPlaylistAlbumsToStage(data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t// if error is course not found show notfound page; else server error\r\n\t\t\t\t\tif (error.response && error.response.status === 404) {\r\n\t\t\t\t\t\thistory.push('/notfound');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thistory.push('/error');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t[ id, history, authUser ]\r\n\t);\r\n\r\n\tconst addAlbumToStage = e => {\r\n\t\te.preventDefault();\r\n\t\tconst albumId = e.currentTarget.value;\r\n\t\tconst album = albumSearchResults.filter(album => album.id === albumId);\r\n\t\tsetStagedAlbums(prevState => setStagedAlbums([ ...prevState, ...album ]));\r\n\r\n\t\tconst duplicate = stagedAlbums.filter(album => album.id === albumId);\r\n\t\tif (duplicate.length < 0) {\r\n\t\t}\r\n\t};\r\n\r\n\tconst removeAlbumFromStage = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst albumId = e.currentTarget.value;\r\n\t\tconst filteredAlbums = stagedAlbums.filter(album => album.id !== albumId);\r\n\t\tsetStagedAlbums([ ...filteredAlbums ]);\r\n\t};\r\n\r\n\tconst updateAlbumListHandler = async e => {\r\n\t\te.preventDefault();\r\n\t\tconst playlistId = e.target.value;\r\n\t\t//checking if each album is in db and if not creating it\r\n\t\tstagedAlbums.forEach(async album => {\r\n\t\t\tconsole.log(album.id);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tawait axios.get(`http://localhost:5000/api/albums/${album.id}`);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error.response);\r\n\t\t\t\tif (error.response.status === 404) {\r\n\t\t\t\t\tconsole.log('404');\r\n\t\t\t\t\tconst body = {\r\n\t\t\t\t\t\tid: album.id,\r\n\t\t\t\t\t\timg_url_1: album.images[0] ? album.images[0].url : null,\r\n\t\t\t\t\t\timg_url_2: album.images[1] ? album.images[1].url : null,\r\n\t\t\t\t\t\timg_url_3: album.images[2] ? album.images[2].url : null,\r\n\t\t\t\t\t\tartist: album.artists[0]['name'],\r\n\t\t\t\t\t\tyear: album.release_date.substring(0, 4),\r\n\t\t\t\t\t\ttitle: album.name\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tawait axios.post('http://localhost:5000/api/albums', body);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('error creating albums');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// create the config object for authorization\r\n\t\tconst credentials = btoa(authUser.username + ':' + userPassword);\r\n\t\tconst basicAuth = 'Basic ' + credentials;\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: basicAuth\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//update title\r\n\t\tconst body = {\r\n\t\t\ttitle: titleInput.current.value\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// post the body and config to the api; redirect to login on success\r\n\t\t\tawait axios.put(`http://localhost:5000/api/playlists/${playlistId}`, body, config);\r\n\r\n\t\t\t// clear all staged albums\r\n\r\n\t\t\t//get playlist id\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`http://localhost:5000/api/playlists/${playlistId}`,\r\n\t\t\t\tbody,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\r\n\t\t\t//for each album delete playlist album\r\n\t\t\tconst albums = data.Albums;\r\n\t\t\tconsole.log(albums);\r\n\t\t\tfor (let album of albums) {\r\n\t\t\t\tconsole.log(album);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait axios.delete(\r\n\t\t\t\t\t\t`http://localhost:5000/api/playlists/${playlistId}/${album.id}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconsole.log('deleted', album.id);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log('error deleting albums from playlist');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// add albums to play list\r\n\t\t\tstagedAlbums.forEach(async album => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait axios.post(\r\n\t\t\t\t\t\t`http://localhost:5000/api/playlists/${playlist.id}/${album.id}`,\r\n\t\t\t\t\t\tconfig\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconsole.log('adding', album.id);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log('error adding albums to playlist');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\thistory.push('/');\r\n\t\t} catch (error) {\r\n\t\t\t// if error is bad request set errors in state; else show server error\r\n\t\t\tif (error.response.status === 400) {\r\n\t\t\t\tconst messages =\r\n\t\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t\t: error.message;\r\n\t\t\t\tsetErrors([ ...messages ]);\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/error');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.pageContainer}>\r\n\t\t\t{playlist && (\r\n\t\t\t\t<div className={styles.formContainer}>\r\n\t\t\t\t\t<h4 className={styles.formLabel}>1. Add Title</h4>\r\n\t\t\t\t\t<div className={styles.flex}>\r\n\t\t\t\t\t\t<div className={styles.searchInputContainer}>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='title'\r\n\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tclassName=''\r\n\t\t\t\t\t\t\t\tplaceholder='AlbumList title...'\r\n\t\t\t\t\t\t\t\tref={titleInput}\r\n\t\t\t\t\t\t\t\tdefaultValue={playlist.title}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{authUser && (\r\n\t\t\t\t\t\t\t\t<p className={styles.secondaryText}>By: {authUser.username}</p>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={styles.button}\r\n\t\t\t\t\t\t\tonClick={updateAlbumListHandler}\r\n\t\t\t\t\t\t\tvalue={playlist.id}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate AlbumList\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h4 className={styles.formLabel}>2. Create a playlist</h4>\r\n\t\t\t\t\t<ArtistSearch setAlbumSearchResults={setAlbumSearchResults} />\r\n\r\n\t\t\t\t\t<AlbumStager\r\n\t\t\t\t\t\talbumSearchResults={albumSearchResults}\r\n\t\t\t\t\t\tsetAlbumSearchResults={setAlbumSearchResults}\r\n\t\t\t\t\t\taddAlbumToStage={addAlbumToStage}\r\n\t\t\t\t\t\tremoveAlbumFromStage={removeAlbumFromStage}\r\n\t\t\t\t\t\tstagedAlbums={stagedAlbums}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<div style={{ marginBottom: '7rem' }} />\r\n\t\t\t\t\t<ActionBar playlist={{ UserId: null }} history={history} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UpdatePlaylists;\r\n","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/AlbumDetail.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/PlaylistDetail.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/Playlists.js",["173"],"import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlbumListGrid from '../components/IndexScreen/AlbumListGrid';\r\n\r\nconst Playlists = ({ history }) => {\r\n\tconst [ playlists, setPlaylists ] = useState([]);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// get all courses data from api/courses; setCourses with data\r\n\t\t\t\t\tconst { data } = await axios.get('http://localhost:5000/api/playlists');\r\n\t\t\t\t\tsetPlaylists(data);\r\n\t\t\t\t\t// this should always work; any error coming back is handled as a server error\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\thistory.push('/error');\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t// repeat on history change\r\n\t\t[ history ]\r\n\t);\r\n\r\n\tconsole.log(playlists);\r\n\r\n\treturn (\r\n\t\t<section className='albumList'>\r\n\t\t\t{/* albumlist grid*/}\r\n\t\t\t<AlbumListGrid playlists={playlists} />\r\n\r\n\t\t\t{/* new album list button */}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Playlists;\r\n","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/layout/Header.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/layout/ActionBar.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/CreatePlaylist.js",["174","175"],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/IndexScreen/AlbumListGrid.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistDetailsScreen/PlaylistHeader.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumDetailsScreen/AlbumHeader.js",["176","177","178","179","180"],"import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport { Popover, OverlayTrigger, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../context/auth';\r\nimport styles from './AlbumHeader.module.css';\r\nimport utilStyles from '../utils/utils.module.css';\r\n\r\nconst AlbumHeader = ({ album }) => {\r\n\tconst { spotifyToken, spotifyHeader } = useContext(AuthContext);\r\n\tconst [ albumData, setAlbumData ] = useState({});\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst getAlbumData = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst bearerToken = 'Bearer ' + spotifyToken;\r\n\t\t\t\t\tconst config = {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: bearerToken\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t\t\t`https://api.spotify.com/v1/albums/${album.id}`,\r\n\t\t\t\t\t\tconfig\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetAlbumData(data);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log('error getting album data');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tgetAlbumData();\r\n\t\t},\r\n\t\t[ album, spotifyToken ]\r\n\t);\r\n\r\n\tconsole.log(albumData);\r\n\treturn (\r\n\t\t<div className={`${styles.albumHeaderContainer}`}>\r\n\t\t\t{albumData && (\r\n\t\t\t\t<div className={`${utilStyles.container} ${styles.flex}`}>\r\n\t\t\t\t\t<div className={styles.albumInfo}>\r\n\t\t\t\t\t\t<h1>{albumData.name}</h1>\r\n\t\t\t\t\t\t<img src={albumData.images && albumData.images[1]['url']} alt='' />\r\n\r\n\t\t\t\t\t\t<p>Artist: {albumData.artists && albumData.artists[0].name} </p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<em>released date: {albumData.release_date}</em>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>label: {albumData.label && albumData.label}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4>Tracklist</h4>\r\n\t\t\t\t\t\t<ul className={styles.tracklist}>\r\n\t\t\t\t\t\t\t{albumData.tracks &&\r\n\t\t\t\t\t\t\t\talbumData.tracks.items.map(track => (\r\n\t\t\t\t\t\t\t\t\t<li key={track.id}>\r\n\t\t\t\t\t\t\t\t\t\t{track.track_number}\r\n\t\t\t\t\t\t\t\t\t\t{'. '}\r\n\t\t\t\t\t\t\t\t\t\t<a href={track.external_urls['spotify']} target='blank'>\r\n\t\t\t\t\t\t\t\t\t\t\t{track.name} -{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t{Math.floor(track.duration_ms / 1000 / 60)}m{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t{Math.floor((track.duration_ms / 1000) % 60)}s\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AlbumHeader;\r\n","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumStager/StagedAlbums.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumStager/AlbumStager.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/ArtistSearch/ArtistSearch.js",["181"],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumStager/AlbumSearchResults.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/ArtistSearch/ArtistSearchResults.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumTracksPopover/AlbumTrackPopover.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumTracksPopover/PopoverData.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumDetailsScreen/AlbumPlaylists.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistDetailsScreen/PlaylistAlbums.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/utils/PrivateRoute.js",["182"],"import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../context/auth';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// private route takes a component and other props as ...rest\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\tconst { authUser, spotifyToken } = useContext(AuthContext);\r\n\r\n\t// return a route with the props from rest spread in\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={props =>\r\n\t\t\t\t// if there is  a logged in user\r\n\t\t\t\tauthUser !== null ? (\r\n\t\t\t\t\t// display the component\r\n\t\t\t\t\t<Component {...props} {...rest} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t// no logged in user; redirect to sign in with from saved\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: '/signin',\r\n\t\t\t\t\t\t\tstate: { from: props.location }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PrivateRoute;\r\n","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/utils/Album.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/utils/ImageCollage.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/utils/Playlist.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistAlbumsPopover/PlaylistAlbumsPopover.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistAlbumsPopover/AlbumPopoverData.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/PlaylistAlbumsPopover/PopoverAlbums.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumSearch/AlbumSearch.js",["183"],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"188","severity":1,"message":"192","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":18},{"ruleId":"188","severity":1,"message":"193","line":6,"column":20,"nodeType":"190","messageId":"191","endLine":6,"endColumn":32},{"ruleId":"184","replacedBy":"194"},{"ruleId":"186","replacedBy":"195"},{"ruleId":"184","replacedBy":"196"},{"ruleId":"186","replacedBy":"197"},{"ruleId":"188","severity":1,"message":"198","line":19,"column":10,"nodeType":"190","messageId":"191","endLine":19,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":81,"column":3,"nodeType":"201","endLine":81,"endColumn":28,"suggestions":"202"},{"ruleId":"188","severity":1,"message":"203","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":14},{"ruleId":"188","severity":1,"message":"198","line":17,"column":10,"nodeType":"190","messageId":"191","endLine":17,"endColumn":16},{"ruleId":"188","severity":1,"message":"204","line":19,"column":8,"nodeType":"190","messageId":"191","endLine":19,"endColumn":21},{"ruleId":"188","severity":1,"message":"189","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"188","severity":1,"message":"205","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":17},{"ruleId":"188","severity":1,"message":"206","line":2,"column":19,"nodeType":"190","messageId":"191","endLine":2,"endColumn":33},{"ruleId":"188","severity":1,"message":"207","line":2,"column":35,"nodeType":"190","messageId":"191","endLine":2,"endColumn":41},{"ruleId":"188","severity":1,"message":"208","line":9,"column":24,"nodeType":"190","messageId":"191","endLine":9,"endColumn":37},{"ruleId":"188","severity":1,"message":"209","line":1,"column":39,"nodeType":"190","messageId":"191","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"210","line":7,"column":20,"nodeType":"190","messageId":"191","endLine":7,"endColumn":32},{"ruleId":"199","severity":1,"message":"211","line":38,"column":5,"nodeType":"201","endLine":38,"endColumn":7,"suggestions":"212"},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'authUser' is assigned a value but never used.","'userPassword' is assigned a value but never used.",["213"],["214"],["213"],["214"],"'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addPlaylistAlbumsToStage'. Either include it or remove the dependency array.","ArrayExpression",["215"],"'Link' is defined but never used.","'cancelHandler' is assigned a value but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'Button' is defined but never used.","'spotifyHeader' is assigned a value but never used.","'useEffect' is defined but never used.","'spotifyToken' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setAlbumSearchResults' and 'spotifyToken'. Either include them or remove the dependency array. If 'setAlbumSearchResults' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [id, history, authUser, addPlaylistAlbumsToStage]",{"range":"221","text":"222"},"Update the dependencies array to be: [setAlbumSearchResults, spotifyToken]",{"range":"223","text":"224"},[2338,2363],"[id, history, authUser, addPlaylistAlbumsToStage]",[1033,1035],"[setAlbumSearchResults, spotifyToken]"]