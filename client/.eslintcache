[{"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/index.js":"1","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/App.js":"2","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/context/auth.js":"3","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/utils/PrivateRoute.js":"4","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/utils/SpotifySearch.js":"5","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/utils/ActionBar.js":"6","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignUp.js":"7","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/AlbumLists.js":"8","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/CreateAlbumList.js":"9","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignIn.js":"10","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/AlbumListDetail.js":"11","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/Forbidden.js":"12","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/Header.js":"13","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdateCourse.js":"14","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignOut.js":"15","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/NotFound.js":"16","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UnhandledError.js":"17","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumSearch.js":"18","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/StagedAlbums.js":"19","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdatePlaylist.js":"20","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdatePlaylists.js":"21","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/AlbumDetail.js":"22"},{"size":225,"mtime":1606363271125,"results":"23","hashOfConfig":"24"},{"size":1671,"mtime":1610220479993,"results":"25","hashOfConfig":"24"},{"size":3333,"mtime":1610004477888,"results":"26","hashOfConfig":"24"},{"size":818,"mtime":1608753247338,"results":"27","hashOfConfig":"24"},{"size":1179,"mtime":1609979267630,"results":"28","hashOfConfig":"24"},{"size":1789,"mtime":1610158320422,"results":"29","hashOfConfig":"24"},{"size":2868,"mtime":1610004422577,"results":"30","hashOfConfig":"24"},{"size":1766,"mtime":1610005833683,"results":"31","hashOfConfig":"24"},{"size":4305,"mtime":1610157889595,"results":"32","hashOfConfig":"24"},{"size":2296,"mtime":1608838120888,"results":"33","hashOfConfig":"24"},{"size":2023,"mtime":1610223382146,"results":"34","hashOfConfig":"24"},{"size":275,"mtime":1608751493870,"results":"35","hashOfConfig":"24"},{"size":841,"mtime":1610001021782,"results":"36","hashOfConfig":"24"},{"size":5374,"mtime":1608756478306,"results":"37","hashOfConfig":"24"},{"size":425,"mtime":1608752397402,"results":"38","hashOfConfig":"24"},{"size":270,"mtime":1608687600207,"results":"39","hashOfConfig":"24"},{"size":445,"mtime":1608687259250,"results":"40","hashOfConfig":"24"},{"size":5344,"mtime":1610227733347,"results":"41","hashOfConfig":"24"},{"size":716,"mtime":1610156174256,"results":"42","hashOfConfig":"24"},{"size":6227,"mtime":1610172145994,"results":"43","hashOfConfig":"24"},{"size":3784,"mtime":1610175724267,"results":"44","hashOfConfig":"24"},{"size":2896,"mtime":1610226193831,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"7w3sv0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/index.js",[],["96","97"],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/App.js",["98"],"// import {useEffect, useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './global.css';\n\nimport UserSignIn from './screens/UserSignIn';\nimport UserSignUp from './screens/UserSignUp';\nimport UserSignOut from './screens/UserSignOut';\n\nimport AlbumLists from './screens/AlbumLists';\nimport AlbumListDetail from './screens/AlbumListDetail';\nimport AlbumDetail from './screens/AlbumDetail';\nimport CreateAlbumList from './screens/CreateAlbumList';\n\nimport UpdatePlaylists from './screens/UpdatePlaylists';\n\nimport Header from './screens/Header';\nimport NotFound from './screens/NotFound';\nimport Forbidden from './screens/Forbidden';\nimport UnhandledError from './screens/UnhandledError';\nimport PrivateRoute from './utils/PrivateRoute';\nimport SpotifySearch from './utils/SpotifySearch';\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Header />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/' component={AlbumLists} />\n\t\t\t\t<PrivateRoute path='/albumList/create' component={CreateAlbumList} />\n\t\t\t\t<PrivateRoute path='/playlists/:id/update' component={UpdatePlaylists} />\n\t\t\t\t<Route path='/playlists/:id' component={AlbumListDetail} />\n\t\t\t\t<Route path='/album/:id' component={AlbumDetail} />\n\t\t\t\t<Route path='/signin' component={UserSignIn} />\n\t\t\t\t<Route path='/signup' component={UserSignUp} />\n\t\t\t\t<Route path='/signout' component={UserSignOut} />\n\t\t\t\t<Route path='/forbidden' component={Forbidden} />\n\t\t\t\t<Route path='/notfound' component={NotFound} />\n\t\t\t\t<Route path='/error' component={UnhandledError} />\n\t\t\t\t<Route render={() => <Redirect to='/notfound' />} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/context/auth.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/utils/PrivateRoute.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/utils/SpotifySearch.js",["99","100","101"],"import React, { Fragment, useContext, useState } from 'react';\r\nimport { AuthContext } from '../context/auth';\r\nimport axios from 'axios';\r\n\r\nconst SpotifySearch = () => {\r\n\tconst { authUser, userPassword, spotifyToken } = useContext(AuthContext);\r\n\r\n\tconst [ query, setQuery ] = useState('');\r\n\r\n\tconst searchHandler = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconsole.log(query);\r\n\r\n\t\t// create the config object for authorization\r\n\t\ttry {\r\n\t\t\tconst bearerToken = 'Bearer ' + spotifyToken;\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: bearerToken\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tconsole.log(query, config);\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`https://api.spotify.com/v1/search?q=${query}&type=album`,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\t\t\tconsole.log('search results', data);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error searching for albums');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='search spotify for albums...'\r\n\t\t\t\tvalue={query}\r\n\t\t\t\tonChange={e => setQuery(e.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button className='button button-secondary' onClick={searchHandler}>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default SpotifySearch;\r\n","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/utils/ActionBar.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignUp.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/AlbumLists.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/CreateAlbumList.js",["102","103"],"import React, { Fragment, useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../context/auth';\r\nimport axios from 'axios';\r\nimport AlbumSearch from '../components/AlbumSearch';\r\nimport StagedAlbums from '../components/StagedAlbums';\r\n\r\nconst CreateAlbumList = props => {\r\n\tconst { authUser, userPassword } = useContext(AuthContext);\r\n\r\n\tconst [ albumTitle, setAlbumTitle ] = useState('');\r\n\tconst [ searchResults, setSearchResults ] = useState([]);\r\n\tconst [ stagedAlbums, setStagedAlbums ] = useState([]);\r\n\tconst [ errors, setErrors ] = useState([]);\r\n\r\n\tconst cancelHandler = event => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.history.goBack();\r\n\t};\r\n\r\n\tconst addAlbumToStage = e => {\r\n\t\te.preventDefault();\r\n\t\tconst albumId = e.currentTarget.value;\r\n\t\tconst album = searchResults.filter(album => album.id === albumId);\r\n\t\tsetStagedAlbums(prevState => setStagedAlbums([ ...prevState, ...album ]));\r\n\r\n\t\tconst duplicate = stagedAlbums.filter(album => album.id === albumId);\r\n\t\tif (duplicate.length < 0) {\r\n\t\t}\r\n\t};\r\n\r\n\tconst removeAlbumFromStage = e => {\r\n\t\te.preventDefault();\r\n\t\tconst albumId = e.currentTarget.value;\r\n\t\tconst filteredAlbums = stagedAlbums.filter(album => album.id !== albumId);\r\n\t\tsetStagedAlbums([ ...filteredAlbums ]);\r\n\t};\r\n\r\n\tconst createAlbumListHandler = async e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tstagedAlbums.forEach(async album => {\r\n\t\t\tconsole.log(album.id);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tawait axios.get(`http://localhost:5000/api/albums/${album.id}`);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error.response);\r\n\t\t\t\tif (error.response.status === 404) {\r\n\t\t\t\t\tconsole.log('404');\r\n\t\t\t\t\tconst body = {\r\n\t\t\t\t\t\tid: album.id,\r\n\t\t\t\t\t\timg_url: album.images[2] ? album.images[2].url : '',\r\n\t\t\t\t\t\tartist: album.artists[0]['name'],\r\n\t\t\t\t\t\tyear: album.release_date.substring(0, 4),\r\n\t\t\t\t\t\ttitle: album.name\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tawait axios.post('http://localhost:5000/api/albums', body);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('error creating albums');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// create the config object for authorization\r\n\t\tconst credentials = btoa(authUser.username + ':' + userPassword);\r\n\t\tconst basicAuth = 'Basic ' + credentials;\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: basicAuth\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst body = {\r\n\t\t\ttitle: albumTitle\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// post the body and config to the api; redirect to login on success\r\n\t\t\tconst createdPlaylist = await axios.post(\r\n\t\t\t\t'http://localhost:5000/api/playlists',\r\n\t\t\t\tbody,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(createdPlaylist);\r\n\t\t\t// add albums to play list\r\n\t\t\tstagedAlbums.forEach(async album => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait axios.post(\r\n\t\t\t\t\t\t`http://localhost:5000/api/playlists/${createdPlaylist.data\r\n\t\t\t\t\t\t\t.id}/${album.id}`,\r\n\t\t\t\t\t\tconfig\r\n\t\t\t\t\t);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log('error adding albums to playlist');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tprops.history.push('/');\r\n\t\t} catch (error) {\r\n\t\t\t// if error is bad request set errors in state; else show server error\r\n\t\t\tif (error.response.status === 400) {\r\n\t\t\t\tconst messages =\r\n\t\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t\t: error.message;\r\n\t\t\t\tsetErrors([ ...messages ]);\r\n\t\t\t} else {\r\n\t\t\t\tprops.history.push('/error');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='grid-66'>\r\n\t\t\t\t<div className='course--header'>\r\n\t\t\t\t\t<h4 className='course--label'>Title</h4>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid='title'\r\n\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='input-title course--title--input'\r\n\t\t\t\t\t\t\tplaceholder='AlbumList title...'\r\n\t\t\t\t\t\t\tvalue={albumTitle}\r\n\t\t\t\t\t\t\tonChange={e => setAlbumTitle(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{authUser && <p>By: {authUser.username}</p>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AlbumSearch\r\n\t\t\t\taddAlbumToStage={addAlbumToStage}\r\n\t\t\t\tsearchResults={searchResults}\r\n\t\t\t\tsetSearchResults={setSearchResults}\r\n\t\t\t/>\r\n\r\n\t\t\t<StagedAlbums removeAlbumFromStage={removeAlbumFromStage} stagedAlbums={stagedAlbums} />\r\n\r\n\t\t\t<div className='grid-100 pad-bottom'>\r\n\t\t\t\t<button className='button button-primary' onClick={createAlbumListHandler}>\r\n\t\t\t\t\tCreate AlbumList\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='button button-secondary' onClick={cancelHandler}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default CreateAlbumList;\r\n","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignIn.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/AlbumListDetail.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/Forbidden.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/Header.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdateCourse.js",[],["104","105"],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UserSignOut.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/NotFound.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UnhandledError.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/AlbumSearch.js",["106"],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/components/StagedAlbums.js",[],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdatePlaylist.js",["107","108"],"/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/UpdatePlaylists.js",["109","110","111","112","113"],"import React, { Fragment, useContext, useState, useEffect, useRef } from 'react';\r\nimport { AuthContext } from '../context/auth';\r\nimport axios from 'axios';\r\nimport AlbumSearch from '../components/AlbumSearch';\r\nimport StagedAlbums from '../components/StagedAlbums';\r\n\r\nconst UpdatePlaylists = ({ history, match }) => {\r\n\tconst id = match.params.id;\r\n\r\n\tconst { authUser, userPassword, spotifyToken } = useContext(AuthContext);\r\n\r\n\tconst [ playlist, setPlaylist ] = useState({});\r\n\r\n\tconst [ searchResults, setSearchResults ] = useState([]);\r\n\tconst [ stagedAlbums, setStagedAlbums ] = useState([]);\r\n\tconst [ errors, setErrors ] = useState([]);\r\n\r\n\tconst titleInput = useRef('');\r\n\r\n\tconst addPlaylistAlbumsToStage = async data => {\r\n\t\tsetStagedAlbums([]);\r\n\t\tsetPlaylist(data);\r\n\t\tconst albums = data.Albums;\r\n\r\n\t\tfor (let album of albums) {\r\n\t\t\tconsole.log(album.id);\r\n\t\t\tawait addToStage(album.id);\r\n\t\t}\r\n\t};\r\n\r\n\tconst addToStage = async id => {\r\n\t\tconsole.log('addToStage 1');\r\n\t\ttry {\r\n\t\t\tconst bearerToken = 'Bearer ' + spotifyToken;\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: bearerToken\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst { data } = await axios.get(`https://api.spotify.com/v1/albums/${id}`, config);\r\n\r\n\t\t\tconsole.log('adding to staged albums');\r\n\t\t\tsetStagedAlbums(prevState => [ ...prevState, data ]);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// get course detail from api\r\n\t\t\t\t\tconsole.log(id);\r\n\t\t\t\t\tconst { data } = await axios.get(`http://localhost:5000/api/playlists/${id}`);\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t// if the logged in user does not match the course fetched\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\tif (authUser && data.User.id !== authUser.id) {\r\n\t\t\t\t\t\t\thistory.push('/forbidden');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// if there is a course and it matches logged user set data in state\r\n\r\n\t\t\t\t\t\t\taddPlaylistAlbumsToStage(data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t// if error is course not found show notfound page; else server error\r\n\t\t\t\t\tif (error.response && error.response.status === 404) {\r\n\t\t\t\t\t\thistory.push('/notfound');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thistory.push('/error');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t[ id, history, authUser ]\r\n\t);\r\n\r\n\tconst addAlbumToStage = e => {\r\n\t\te.preventDefault();\r\n\t\tconst albumId = e.currentTarget.value;\r\n\t\tconst album = searchResults.filter(album => album.id === albumId);\r\n\t\tsetStagedAlbums(prevState => setStagedAlbums([ ...prevState, ...album ]));\r\n\r\n\t\tconst duplicate = stagedAlbums.filter(album => album.id === albumId);\r\n\t\tif (duplicate.length < 0) {\r\n\t\t}\r\n\t};\r\n\r\n\tconst removeAlbumFromStage = e => {\r\n\t\te.preventDefault();\r\n\t\tconst albumId = e.currentTarget.value;\r\n\t\tconst filteredAlbums = stagedAlbums.filter(album => album.id !== albumId);\r\n\t\tsetStagedAlbums([ ...filteredAlbums ]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{playlist && (\r\n\t\t\t\t<div className='bounds course--detail'>\r\n\t\t\t\t\t<div className='grid-66'>\r\n\t\t\t\t\t\t{/* albumList title */}\r\n\t\t\t\t\t\t<div className='course--header'>\r\n\t\t\t\t\t\t\t<h4 className='course--label'>Title</h4>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tid='title'\r\n\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tclassName='input-title course--title--input'\r\n\t\t\t\t\t\t\t\t\tplaceholder='AlbumList title...'\r\n\t\t\t\t\t\t\t\t\tdefaultValue={playlist.title}\r\n\t\t\t\t\t\t\t\t\tref={titleInput}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{authUser && <p>By: {authUser.username}</p>}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<AlbumSearch\r\n\t\t\t\t\t\t\taddAlbumToStage={addAlbumToStage}\r\n\t\t\t\t\t\t\tsearchResults={searchResults}\r\n\t\t\t\t\t\t\tsetSearchResults={setSearchResults}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<StagedAlbums\r\n\t\t\t\t\t\t\tremoveAlbumFromStage={removeAlbumFromStage}\r\n\t\t\t\t\t\t\tstagedAlbums={stagedAlbums}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UpdatePlaylists;\r\n","/mnt/c/projects/development/spotify_albumList_app/spotify_albumList_app/client/src/screens/AlbumDetail.js",["114","115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":21,"column":8,"nodeType":"122","messageId":"123","endLine":21,"endColumn":21},{"ruleId":"120","severity":1,"message":"124","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"125","line":6,"column":10,"nodeType":"122","messageId":"123","endLine":6,"endColumn":18},{"ruleId":"120","severity":1,"message":"126","line":6,"column":20,"nodeType":"122","messageId":"123","endLine":6,"endColumn":32},{"ruleId":"120","severity":1,"message":"127","line":1,"column":49,"nodeType":"122","messageId":"123","endLine":1,"endColumn":58},{"ruleId":"120","severity":1,"message":"128","line":13,"column":10,"nodeType":"122","messageId":"123","endLine":13,"endColumn":16},{"ruleId":"116","replacedBy":"129"},{"ruleId":"118","replacedBy":"130"},{"ruleId":"120","severity":1,"message":"127","line":1,"column":49,"nodeType":"122","messageId":"123","endLine":1,"endColumn":58},{"ruleId":"120","severity":1,"message":"128","line":16,"column":10,"nodeType":"122","messageId":"123","endLine":16,"endColumn":16},{"ruleId":"120","severity":1,"message":"131","line":50,"column":8,"nodeType":"122","messageId":"123","endLine":50,"endColumn":21},{"ruleId":"120","severity":1,"message":"124","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"126","line":10,"column":20,"nodeType":"122","messageId":"123","endLine":10,"endColumn":32},{"ruleId":"120","severity":1,"message":"128","line":16,"column":10,"nodeType":"122","messageId":"123","endLine":16,"endColumn":16},{"ruleId":"120","severity":1,"message":"132","line":16,"column":18,"nodeType":"122","messageId":"123","endLine":16,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":78,"column":3,"nodeType":"135","endLine":78,"endColumn":28,"suggestions":"136"},{"ruleId":"120","severity":1,"message":"137","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":17},{"ruleId":"133","severity":1,"message":"138","line":21,"column":5,"nodeType":"135","endLine":21,"endColumn":7,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'SpotifySearch' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'authUser' is assigned a value but never used.","'userPassword' is assigned a value but never used.","'useEffect' is defined but never used.","'errors' is assigned a value but never used.",["140"],["141"],"'updateHandler' is assigned a value but never used.","'setErrors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addPlaylistAlbumsToStage'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'ActionBar' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [id, history, authUser, addPlaylistAlbumsToStage]",{"range":"148","text":"149"},"Update the dependencies array to be: [id]",{"range":"150","text":"151"},[2203,2228],"[id, history, authUser, addPlaylistAlbumsToStage]",[598,600],"[id]"]